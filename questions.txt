Питання:

як валідувати кімнату у користувача (ref), якщо вона обов'язкова, як коли не обов'язкова

як валідувати patch, питання пов'язане з тим, що можуть бути не всі поля

чи потрібен ретурн в контроллері?
 return res.status(201).json({"messages": Controller.responseMessages.success[201]});
таким чином повертає об'єкт респонсу. ЧИ може він бути потрібен, це друге зитання.)

чи потрібні async методи в сервісі, вертаються проміси, навіть якщо явно це не вказувати
- тільки якщо декілька запитів з awaitom тоді треа писати async

як називати документ на рівні контроллера (Item в мене), на рівні сервісу (в мене Document)





План творчості:
+ написати сервер CRUD по сутності notes
+ обробка помилок та статусів
+ декомпозиція (що таке core)
+- створення сервісу
+ підключення до БД - create new branch!
+ merge dev to main
  додати в базу таймстамп
  create global app errorHandler? remove try/catch from controller


TODO for NODE projects
+ESLint встановити локально дев
    вносити правила до eslintrc.json: //TODO Shemsedinov has a lint file in HowProgramming works
    довжину рядка, кома с крапкою, анрезолвед
    - no console.log
    - spaces into { curly braces }


зафіксувати версії в package.json































старі

розподілення відповідальностей між сервісом та контроллером,

можливо варто повертати з сервіса моделі об'єкт, що буде містити повідомлення, помилки, або отриманий
з моделі ресурс, бо інакше мій сервіс повертає дані різних типів.

як зробити щоб дія з одного модуля чекала на виконання дії з другого?

валідатори: зараза викидають 500: наприклад якщо в update в масиві не дату передавати

patch можливо краще не передавати в посиланні id елементу, що хотімо пропатчити, а хай бере з тіла запиту
id об'єкта

lean - ?
